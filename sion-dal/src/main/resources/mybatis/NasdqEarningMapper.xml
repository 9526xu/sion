<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lol.sion.core.dao.mapper.NasdqEarningMapper">

    <resultMap id="BaseResultMap" type="com.lol.sion.core.dao.dataobject.NasdqEarningDO">
        <id column="earning_id" jdbcType="BIGINT" property="earningId" />
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
        <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
        <result column="company" jdbcType="VARCHAR" property="company" />
        <result column="code" jdbcType="VARCHAR" property="code" />
        <result column="capital_amount" jdbcType="VARCHAR" property="capitalAmount" />
        <result column="expect_date" jdbcType="VARCHAR" property="expectDate" />
        <result column="deadline_date" jdbcType="VARCHAR" property="deadlineDate" />
        <result column="per_share_earnings_expect" jdbcType="VARCHAR" property="perShareEarningsExpect" />
        <result column="expect_num" jdbcType="VARCHAR" property="expectNum" />
        <result column="last_year_report_date" jdbcType="VARCHAR" property="lastYearReportDate" />
        <result column="last_year_per_share_earnings" jdbcType="VARCHAR" property="lastYearPerShareEarnings" />
        <result column="publish_time" jdbcType="VARCHAR" property="publishTime" />
        <result column="title" jdbcType="VARCHAR" property="title" />
    </resultMap>

    <sql id="Query_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criteria" item="criterion">
                        <choose>
                            <when test="criterion.noValue">
                                and ${criterion.condition}
                            </when>
                            <when test="criterion.singleValue">
                                and ${criterion.condition} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                and ${criterion.condition}
                            <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                #{listItem}
                            </foreach>
                            </when>
                        </choose>
                    </foreach>
                </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Query_Where_Clause">
        <where>
            <foreach collection="query.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        earning_id,gmt_create,gmt_modified,is_deleted,company,code,capital_amount,expect_date,deadline_date,per_share_earnings_expect,expect_num,last_year_report_date,last_year_per_share_earnings,publish_time,title
    </sql>

    <select id="selectByQuery" parameterType="com.lol.sion.core.dao.query.NasdqEarningQuery" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
            from nasdq_earning
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <include refid="MysqlDialectSuffix" />
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from nasdq_earning where earning_id = #{earningId,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from nasdq_earning where earning_id = #{earningId,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByQuery" parameterType="com.lol.sion.core.dao.query.NasdqEarningQuery">
        delete from nasdq_earning
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
    </delete>

    <insert id="insertSelective" parameterType="com.lol.sion.core.dao.dataobject.NasdqEarningDO">
        <selectKey keyProperty="earningId" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into nasdq_earning
        <trim prefix="(" suffix=")" suffixOverrides=",">
            gmt_create,gmt_modified,
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="company != null">
                company,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="capitalAmount != null">
                capital_amount,
            </if>
            <if test="expectDate != null">
                expect_date,
            </if>
            <if test="deadlineDate != null">
                deadline_date,
            </if>
            <if test="perShareEarningsExpect != null">
                per_share_earnings_expect,
            </if>
            <if test="expectNum != null">
                expect_num,
            </if>
            <if test="lastYearReportDate != null">
                last_year_report_date,
            </if>
            <if test="lastYearPerShareEarnings != null">
                last_year_per_share_earnings,
            </if>
            <if test="publishTime != null">
                publish_time,
            </if>
            <if test="title != null">
                title,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            now(),now(),
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=TINYINT},
            </if>
            <if test="company != null">
                #{company,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="capitalAmount != null">
                #{capitalAmount,jdbcType=VARCHAR},
            </if>
            <if test="expectDate != null">
                #{expectDate,jdbcType=VARCHAR},
            </if>
            <if test="deadlineDate != null">
                #{deadlineDate,jdbcType=VARCHAR},
            </if>
            <if test="perShareEarningsExpect != null">
                #{perShareEarningsExpect,jdbcType=VARCHAR},
            </if>
            <if test="expectNum != null">
                #{expectNum,jdbcType=VARCHAR},
            </if>
            <if test="lastYearReportDate != null">
                #{lastYearReportDate,jdbcType=VARCHAR},
            </if>
            <if test="lastYearPerShareEarnings != null">
                #{lastYearPerShareEarnings,jdbcType=VARCHAR},
            </if>
            <if test="publishTime != null">
                #{publishTime,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByQuery" parameterType="com.lol.sion.core.dao.query.NasdqEarningQuery" resultType="java.lang.Integer">
        select count(*) from nasdq_earning
        <if test="_parameter != null">
            <include refid="Query_Where_Clause" />
        </if>
    </select>

    <update id="updateByQuerySelective" parameterType="map">
        update nasdq_earning
        <set>
            gmt_modified=now(),
            <if test="record.isDeleted != null">
                is_deleted = #{record.isDeleted,jdbcType=TINYINT},
            </if>
            <if test="record.company != null">
                company = #{record.company,jdbcType=VARCHAR},
            </if>
            <if test="record.code != null">
                code = #{record.code,jdbcType=VARCHAR},
            </if>
            <if test="record.capitalAmount != null">
                capital_amount = #{record.capitalAmount,jdbcType=VARCHAR},
            </if>
            <if test="record.expectDate != null">
                expect_date = #{record.expectDate,jdbcType=VARCHAR},
            </if>
            <if test="record.deadlineDate != null">
                deadline_date = #{record.deadlineDate,jdbcType=VARCHAR},
            </if>
            <if test="record.perShareEarningsExpect != null">
                per_share_earnings_expect = #{record.perShareEarningsExpect,jdbcType=VARCHAR},
            </if>
            <if test="record.expectNum != null">
                expect_num = #{record.expectNum,jdbcType=VARCHAR},
            </if>
            <if test="record.lastYearReportDate != null">
                last_year_report_date = #{record.lastYearReportDate,jdbcType=VARCHAR},
            </if>
            <if test="record.lastYearPerShareEarnings != null">
                last_year_per_share_earnings = #{record.lastYearPerShareEarnings,jdbcType=VARCHAR},
            </if>
            <if test="record.publishTime != null">
                publish_time = #{record.publishTime,jdbcType=VARCHAR},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Query_Where_Clause" />
        </if>
    </update>

    <update id="updateByQuery" parameterType="map">
        update nasdq_earning
        <set>
        is_deleted = #{record.isDeleted,jdbcType=TINYINT},
        company = #{record.company,jdbcType=VARCHAR},
        code = #{record.code,jdbcType=VARCHAR},
        capital_amount = #{record.capitalAmount,jdbcType=VARCHAR},
        expect_date = #{record.expectDate,jdbcType=VARCHAR},
        deadline_date = #{record.deadlineDate,jdbcType=VARCHAR},
        per_share_earnings_expect = #{record.perShareEarningsExpect,jdbcType=VARCHAR},
        expect_num = #{record.expectNum,jdbcType=VARCHAR},
        last_year_report_date = #{record.lastYearReportDate,jdbcType=VARCHAR},
        last_year_per_share_earnings = #{record.lastYearPerShareEarnings,jdbcType=VARCHAR},
        publish_time = #{record.publishTime,jdbcType=VARCHAR},
        title = #{record.title,jdbcType=VARCHAR},
        gmt_modified = now()
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Query_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.lol.sion.core.dao.dataobject.NasdqEarningDO">
        update nasdq_earning
        <set>
            gmt_modified=now(),
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=TINYINT},
            </if>
            <if test="company != null">
                company = #{company,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="capitalAmount != null">
                capital_amount = #{capitalAmount,jdbcType=VARCHAR},
            </if>
            <if test="expectDate != null">
                expect_date = #{expectDate,jdbcType=VARCHAR},
            </if>
            <if test="deadlineDate != null">
                deadline_date = #{deadlineDate,jdbcType=VARCHAR},
            </if>
            <if test="perShareEarningsExpect != null">
                per_share_earnings_expect = #{perShareEarningsExpect,jdbcType=VARCHAR},
            </if>
            <if test="expectNum != null">
                expect_num = #{expectNum,jdbcType=VARCHAR},
            </if>
            <if test="lastYearReportDate != null">
                last_year_report_date = #{lastYearReportDate,jdbcType=VARCHAR},
            </if>
            <if test="lastYearPerShareEarnings != null">
                last_year_per_share_earnings = #{lastYearPerShareEarnings,jdbcType=VARCHAR},
            </if>
            <if test="publishTime != null">
                publish_time = #{publishTime,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
        </set>
        where earning_id = #{earningId,jdbcType=BIGINT}
    </update>

    <sql id="MysqlDialectSuffix">
        <if test="pageOffset &gt;= 0 and pageSize &gt; 0">
            <![CDATA[ LIMIT #{pageOffset,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER} ]]>
        </if>
    </sql>

</mapper>
